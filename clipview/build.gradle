apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

group            = 'me.mattak'
version          = '0.0.2'
archivesBaseName = 'clipview'

ext {
    archiveName  = 'clipview'
    userId       = 'mattak'
    userName     = 'Takuma Maruyama'
    userEmail    = 'mattak.me@gmail.com'
    gitUrl       = 'https://github.com/mattak/ClipView.git'
    siteUrl      = 'https://github.com/mattak/ClipView'
    issueUrl     = 'https://github.com/mattak/ClipView/issues'
    projectName  = 'ClipView'
    projectDescription = 'clipview for android'
    scmUrl       = 'scm:git@github.com:mattak/ClipView.git'
    licenseName  = 'The Apache License, Version 2.0'
    licenseUrl   = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    isReleaseVersion = !version.endsWith('SNAPSHOT')
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    jacoco {
        version = '0.7.9'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'LICENSE'
    }

    lintOptions {
        disable 'NewApi'
    }
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConvensions {
    doLast {
        println project.getConvention()
    }
}

if (gradle.startParameter.taskNames.contains('uploadArchives')) {
    apply from: 'publish_maven.gradle'
}
